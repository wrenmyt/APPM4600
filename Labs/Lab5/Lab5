import numpy as np




# adjusted bisection code from class
def bisection(f, f1, f2, a, b, tol, Nmax):


    fa = f(a); fb = f(b)
    if (fa*fb>0):
       ier = 1
       astar = a
       return [astar, ier]


    count = 0
    while (count < Nmax):
      c = 0.5*(a+b)
      fc = f(c)
      f1c = f1(c)
      f2c = f2(c)


      bound = abs((fc * f2c)/(f1c**2))


      if bound <= 1:
        astar = c
        ier = 0
        return [astar, ier]
     
      if (fa*fc<0):
         b = c
      elif (fb*fc<0):
        a = c
        fa = fc
      else:
        astar = c
        ier = 3
        return [astar, ier]
     
      count = count +1


    astar = a
    ier = 2
    return [astar,ier]


f = lambda x: x**3+x-4
f1 = lambda x: 3*x**2 + 1
f2 = lambda x: 6*x
a = 1
b = 4


Nmax = 100
tol = 1e-3


[astar,ier] = bisection(f, f1, f2, a, b, tol, Nmax)
print('the value of x is',astar)
print('the error message reads:',ier)

